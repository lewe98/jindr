cache:
  paths:
    - client/node_modules/
    - client/www/
    - server/node_modules/


stages:
  - init
  - lint
  - build
  - test
  - staging
  - production

init_modules:
  stage: init
  script:
    - cd client
    - npm ci
    - cd ../server
    - npm ci
  tags:
    - nodejs

lint_testing:
  stage: lint
  script:
    - cd client
    - npm run lint
    - cd ../server
    - npm run lint
  tags:
    - nodejs

build:
  stage: build
  script:
    - cd client
    - npm i -g @ionic/cli
    - npm run build
  tags:
    - nodejs



api_testing:
  stage: test
  script:
    - cd server
    - npm i
    - npm run tsc
    - npm run ci-test
  tags:
    - nodejs



staging:
  stage: staging
  image: ruby:latest
  script:
    - cd client
    - npm run staging
    - echo "Deploy to staging server"
    - cd ..
    - npm install -g json
    - json -I -f package.json -e 'this.heroku-postbuild="cd client && npm install --only=dev && ionic build --prod --c=staging"'
    - gem install dpl
    - dpl --provider=heroku --app=$HEROKU_APP_STAGING --api-key=$HEROKU_API_KEY
  environment:
    name: staging
    url: http://www.staging.jindr.de
  only:
    - staging
  tags:
    - ruby2



production:
  stage: production
  image: ruby:latest
  script:
    - cd client
    - npm run production
    - echo "Deploy to production server"
    - cd ..
    - npm install -g json
    - json -I -f package.json -e 'this.heroku-postbuild="cd client && npm install --only=dev && ionic build --prod --c=production"'
    - gem install dpl
    - dpl --provider=heroku --app=$HEROKU_APP_PRODUCTION --api-key=$HEROKU_API_KEY
  environment:
    name: production
    url: http://www.jindr.de
  only:
    - master
  tags:
    - ruby2
