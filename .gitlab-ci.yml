cache:
  paths:
    - client/node_modules/
    - client/www/
    - server/node_modules/


stages:
  - init
  - lint
  - build
  - test
  - staging
  - production

init_modules:
  stage: init
  script:
    - cd client
    - npm ci
    - cd ../server
    - npm ci
  tags:
    - nodejs
  artifacts:
    paths:
      - node_modules/


karma_testing:
  stage: test
  script:
    - cd client
    - npm run karma
  tags:
    - nodejs




staging:
  stage: staging
  image: ruby:latest
  script:
    - echo "Deploy to staging server"
    - curl -sL https://deb.nodesource.com/setup_12.x | bash -
    - apt-get install -y nodejs
    - npm install -g npe
    - npe scripts.heroku-postbuild "cd client && npm install --only=dev && ionic build --prod --c=staging"
    - gem install dpl
    - dpl --provider=heroku --app=$HEROKU_APP_STAGING --api-key=$HEROKU_API_KEY
  environment:
    name: staging
    url: http://www.staging.jindr.de
  only:
    - staging
  tags:
    - ruby2



production:
  stage: production
  image: ruby:latest
  script:
    - echo "Deploy to production server"
    - curl -sL https://deb.nodesource.com/setup_12.x | bash -
    - apt-get install -y nodejs
    - npm install -g npe
    - npe scripts.heroku-postbuild "cd client && npm install --only=dev && ionic build --prod --c=production"
    - gem install dpl
    - dpl --provider=heroku --app=$HEROKU_APP_PRODUCTION --api-key=$HEROKU_API_KEY
  environment:
    name: production
    url: http://www.jindr.de
  only:
    - master
  tags:
    - ruby2
